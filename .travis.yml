###
### Enable sudo (required for docker service)
###
sudo: required


###
### Language
###
language: python


###
### Add services
###
services:
  - docker


###
### Build Matrix definition
###
env:
  global:
    - IMAGE=devilbox/nginx-stable
    # travis encrypt DOCKER_USERNAME=user
    # travis encrypt DOCKER_PASSWORD=pass
    # Must be regenerated when repository name/owner changes
    # DOCKER_USERNAME
    - secure: "JSBXf4UJN2E0xBINmtVPPkFL27P1s/f3z/Gpl4009ko1lQk6GCDZlzDlA20M43Sg51drV9nq+H5zjwMNrI1AQ6oiEnW8/H3LNfQE4ooO/sHdmpjA2P286sldgiZTx2MB9mp+3FUdf3+corTS0HJ9Gi5pb2FSdau36rkdlHHXmZ/rRatwLOVQCUibdbwnQTv5ayBAJixr9vboDjS55iJxHNWMx9QdYEKaNe/pizSSDLqM8RddMaJZCV1TNMAESHQqA5YvWxI2+ApsY4BnzRF+JgK7EnogYWdAuoybqMcBmK7+FH/aqPozPPxOL7qOl/VB+Bi8/mr8odJS3XoJyTUrdvm7KLSJwPd2z80JqUv7EzgX58+B7Y1Mnw8Sd9GngcNw2j4n2Qx9s/UWzz09KnPlLsiU0XAVNU1jzuwyPUg2MV54/176za61697C/CL4gW6B+JglBGRQmA1oanKty51Bu2bmxnP7lFH8koYBHNjLV30qw/nRlXcNAMviUannBcnEyayPtwUw2EEKQQIzmSPkBcv3AVnBPfdrAVinY4S/ll+q2FlVvFjqUUsDZKFhAw0hls6iH/fUw7UnckddP7bqfvBUmwMHhskoo8lu0bV1Owk4lBqmUFJkQcHl+0zvVythBjRCyktrvTLAjfvS/7HdxQPIat0K/O7J9Jbhg7UJdzQ="
    # DOCKER_PASSWORD
    - secure: "edwTPNiI46GqX1wCVhN1xfrE1QEvDImEDz/aL2DYZo/W5Y3h4Y7HzJh4E8nb0gtYeJmoNRpDde/mTxDFtzOX0EzcAygjKrwbxEO063/Y2x6odIcRV/XU+OPnTpLL1jwQsb+kWgdTnl1E/Y5IO+8+Dhlb4l4tvRC50r4sU8iDZFXNj5B5SRzAXTlERkccL83JxA8qGRn9u8+w97vglMyXK4/fnae4KIb6pcv3flkiw//uq5lQyqdIbLqxa+aY99zatgmmYcrum5WiuSBWHdUMaB4W6KulvGnrUWYujQldTAQ8967stWbWta+qMQ2G3hFfA80mmmJo2U0R+IHocvrhQczxcVja7Lcqfqs/6SSlK0vO3U5XV/jBYhHAj8jjKAQI0Z9sRvK6cnH/MXxzJLtnpYC/AB+CL7Ou1PQLVVxZ/0gXmRFgg4oOXmdupymBpI8zQanJ9VvLfljephLs5MeR6994ZJQJ8/mG/HGxh2yempN0NED2jZZjnqXbsWCimjeNN0hhKhEQFZZ5654aG62eWKhfaI1ril7lc2ba8VnMeRTEE7htM4wfhEHVdiXdpir8zfn8sydHvmaH/vO+M3zuCTKJg9MwBvzuANQBy5Ae9YtMzHETM86wfXqZ1e5E0iaWYccZaeGSGIpS8mIpt5uwDOPMRaL4teJ4SNzlZEa7XBM="
  matrix:
    - TEST=0
    - TEST=1


###
### Stage definitions
###
stages:
  - test
  - deploy


###
### Global for all stages
###
install:
  # Get newer docker version
  - max=100; i=0; while [ $i -lt $max ]; do if sudo apt-get update; then break; else i=$((i+1)); fi done
  - max=100; i=0; while [ $i -lt $max ]; do if sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce; then break; else i=$((i+1)); fi done
  - docker version
script:
  - .ci/start-ci.sh "${TEST}" "${IMAGE}"


###
### Job definitions
###
jobs:
  include:
    # Final deploy stage
    - stage: deploy
      env: TEST=
      before_script:
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ]; then
              docker build --no-cache=true -t "${IMAGE}:${TRAVIS_TAG}" . &&
              docker images;
            elif [ "${TRAVIS_BRANCH}" == "master" ]; then
              docker build --no-cache=true -t "${IMAGE}:latest" . &&
              docker images;
            elif [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              docker build --no-cache=true -t "${IMAGE}:${TRAVIS_BRANCH}" . &&
              docker images;
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
      script:
        # Push to docker hub on success
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin &&
            if [ -n "${TRAVIS_TAG}" ]; then
              echo "Pushing ${IMAGE}:${TRAVIS_TAG}" &&
              docker push "${IMAGE}:${TRAVIS_TAG}" &&
              docker tag "${IMAGE}:${TRAVIS_TAG}" "${IMAGE}:latest" &&
              echo "Pushing ${IMAGE}:latest" &&
              docker push "${IMAGE}:latest";
            elif [ "${TRAVIS_BRANCH}" == "master" ]; then
              echo "Pushing ${IMAGE}:latest" &&
              docker push "${IMAGE}:latest";
            elif [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              echo "Pushing ${IMAGE}:${TRAVIS_BRANCH}" &&
              docker push "${IMAGE}:${TRAVIS_BRANCH}";
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
